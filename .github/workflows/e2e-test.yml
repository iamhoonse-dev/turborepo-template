name: e2e-test

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Create cache directory
        run: mkdir -p /tmp/docker-cache

      - name: Build E2E environment
        id: build
        run: |
          IMAGE_TAG=e2e-${{ github.sha }}
          echo "::set-output name=image-tag::${IMAGE_TAG}"
          docker compose -f docker-compose.e2e.yaml build
          docker save -o /tmp/docker-cache/playwright-web.tar turborepo-template-playwright-web:latest
          docker save -o /tmp/docker-cache/web.tar turborepo-template-web:latest

      - name: Save Docker image
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-e2e-${{ steps.build.outputs.image-tag }}
          restore-keys: |
            ${{ runner.os }}-e2e-

  run-playwright:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Docker image
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-e2e-${{ needs.build.outputs.image-tag }}

      - name: Load Docker image from tar
        run: |
          docker load -i /tmp/docker-cache/playwright-web.tar
          docker load -i /tmp/docker-cache/web.tar

      - name: Prepare docker external network
        run: |
          docker network create "e2e_network"

      - name: Run E2E tests
        run: |
          IMAGE_TAG=${{ needs.build.outputs.image-tag }}
          docker compose -f docker-compose.e2e.yaml up --exit-code-from playwright-web
