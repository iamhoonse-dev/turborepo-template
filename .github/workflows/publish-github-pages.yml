# Workflow for building and deploying a Next.js site to GitHub Pages
name: publish-github-pages

on:
  push:
    # Runs on pushes targeting the default branch
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-cache-${{ hashFiles('**/pnpm-lock.yaml', '**/pnpm-workspace.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-cache-${{ hashFiles('**/pnpm-lock.yaml', '**/pnpm-workspace.yaml') }}-
            ${{ runner.os }}-turbo-cache-

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
            tools/*/node_modules
            packages/*/node_modules
            configs/*/node_modules
            shared/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml', '**/pnpm-workspace.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Restore dist cache
        uses: actions/cache@v4
        with:
          path: |
            apps/*/.next
            !apps/*/.next/cache
            apps/*/storybook-static
            apps/*/out
            packages/*/dist
            configs/*/dist
            shared/*/dist
          key: ${{ runner.os }}-dist-${{ hashFiles('**/pnpm-lock.yaml', '**/pnpm-workspace.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dist-${{ hashFiles('**/pnpm-lock.yaml', '**/pnpm-workspace.yaml') }}-
            ${{ runner.os }}-dist-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate .env file for docs
        run: |
          echo "GITHUB_REPOSITORY=${{ github.repository }}" > apps/docs/.env.local
          echo "GISCUS_REPO=${{ github.repository }}" >> apps/docs/.env.local
          echo "GISCUS_REPO_ID=${{ secrets.GISCUS_REPO_ID }}" >> apps/docs/.env.local
          echo "GISCUS_DISCUSSION_CATEGORY=${{ vars.GISCUS_DISCUSSION_CATEGORY }}" >> apps/docs/.env.local
          echo "GISCUS_DISCUSSION_CATEGORY_ID=${{ secrets.GISCUS_DISCUSSION_CATEGORY_ID }}" >> apps/docs/.env.local

      - name: Build docs app
        run: pnpm run build --filter=docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/docs/out

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
