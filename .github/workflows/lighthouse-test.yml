name: lighthouse-test

on:
  push:
    branches:
      - '*'

jobs:
  run-docker-compose-lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Docker cache directory exists
        run: mkdir -p /tmp/docker-cache

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Setup Docker image Caching
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-lighthouse-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-lighthouse-

      - name: Load Docker image from tar
        run: |
          if [ -f /tmp/docker-cache/lighthouse-runner.tar ]; then
            docker load -i /tmp/docker-cache/lighthouse-runner.tar
          fi
          if [ -f /tmp/docker-cache/web.tar ]; then
            docker load -i /tmp/docker-cache/web.tar
          fi

      - name: inject LHCI_GITHUB_APP_TOKEN
        run: |
          docker compose -f docker-compose.lighthouse.yaml convert > docker-compose.lighthouse.converted.yaml
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Build Lighthouse environment
        id: build
        run: |
          docker compose -f docker-compose.lighthouse.converted.yaml build
          docker save -o /tmp/docker-cache/lighthouse-runner.tar turborepo-template-lighthouse-runner:latest
          docker save -o /tmp/docker-cache/web.tar turborepo-template-web:latest

      - name: Prepare docker external network
        run: |
          docker network inspect "lighthouse_network" >/dev/null 2>&1 || docker network create "lighthouse_network"

      - name: Run Lighthouse tests
        run: |
          docker compose -f docker-compose.lighthouse.converted.yaml up --exit-code-from lighthouse-runner
